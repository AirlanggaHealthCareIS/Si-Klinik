/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI_StafKlinik;

import Client_Application_Model.TableModel_Penggajian;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import database.Service.Penggajian_Service;
import database.entity.Laporan_Keuangan;
import database.entity.Penggajian;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Windows 8.1
 */
public class Panel_Penggajian extends javax.swing.JPanel {

    Penggajian_Service penggajianService;
    TableModel_Penggajian tabel;
    Penggajian p = new Penggajian();
    Laporan_Keuangan lk = new Laporan_Keuangan();
    List<Penggajian> list;
    List<Penggajian> list2;
    int baris;
    String tanggal1;
    String tanggal2;
    
    private Font font1 = new Font(Font.FontFamily.HELVETICA,14,Font.BOLD);
    private Font font2 = new Font(Font.FontFamily.HELVETICA,18,Font.BOLD);
    private Font font3 = new Font(Font.FontFamily.HELVETICA,11,Font.BOLD);
    private Font font5 = new Font(Font.FontFamily.HELVETICA,11);
    private Font font4 = new Font(Font.FontFamily.HELVETICA,9);
    private Font font6 = new Font(Font.FontFamily.HELVETICA,9,Font.BOLD);
    
    /**
     * Creates new form Panel_Penggajian
     */
    public Panel_Penggajian() {
        initComponents();
    }

     public Panel_Penggajian(GUI_StafKlinik gui) {
        initComponents();
        tabel = new TableModel_Penggajian();
        penggajianService = gui.penggajianServer;        
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        tampilButton = new javax.swing.JToggleButton();
        refreshButton = new javax.swing.JToggleButton();
        cetakSlipGajiButton = new javax.swing.JButton();
        pegawaiList = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPenggajian = new javax.swing.JTable();

        jLabel15.setFont(new java.awt.Font("Maiandra GD", 0, 36)); // NOI18N
        jLabel15.setText("Laporan Keuangan");

        setMinimumSize(new java.awt.Dimension(700, 450));

        jLabel16.setFont(new java.awt.Font("Maiandra GD", 0, 36)); // NOI18N
        jLabel16.setText("Laporan Penggajian");

        jLabel3.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        jLabel3.setText("Periode :");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setMaxSelectableDate(null);
        jDateChooser1.setMinSelectableDate(null);
        jDateChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDateChooser1MouseClicked(evt);
            }
        });

        jLabel4.setText("S/D");

        jDateChooser2.setDateFormatString("yyyy-MM-dd");
        jDateChooser2.setMaxSelectableDate(null);
        jDateChooser2.setMinSelectableDate(null);

        tampilButton.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        tampilButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Next-32.png"))); // NOI18N
        tampilButton.setText("Tampilkan");
        tampilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tampilButtonActionPerformed(evt);
            }
        });

        refreshButton.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh-32.png"))); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        cetakSlipGajiButton.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        cetakSlipGajiButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/agt_print-32.png"))); // NOI18N
        cetakSlipGajiButton.setText("Cetak Slip Gaji");
        cetakSlipGajiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakSlipGajiButtonActionPerformed(evt);
            }
        });

        pegawaiList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "[pilih]", "Dokter", "Non Dokter" }));
        pegawaiList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegawaiListActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        jLabel5.setText("Jenis Pegawai :");

        tabelPenggajian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tanggal", "ID  Penggajian", "ID Pegawai", "Nama Pegawai", "Gaji Pokok", "Gaji Tambahan", "Total Gaji"
            }
        ));
        tabelPenggajian.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tabelPenggajianComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(tabelPenggajian);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(pegawaiList, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(tampilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refreshButton)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cetakSlipGajiButton)
                .addGap(249, 249, 249))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tampilButton)
                        .addComponent(refreshButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pegawaiList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(cetakSlipGajiButton)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(191, 191, 191))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tabelPenggajianComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tabelPenggajianComponentShown
        // TODO add your handling code here:
        //        refresh();
    }//GEN-LAST:event_tabelPenggajianComponentShown

    private void cetakSlipGajiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakSlipGajiButtonActionPerformed
        // TODO add your handling code here:
        if(!jDateChooser1.getDate().toString().isEmpty()&&!jDateChooser2.getDate().toString().isEmpty()){

            Date tanggal3 =(Date) jDateChooser1.getDate();
            tanggal1 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(tanggal3);
            tanggal3 =(Date) jDateChooser2.getDate();
            tanggal2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(tanggal3);
            refreshDokter1(tanggal1, tanggal2);
            refreshNonDokter1(tanggal1, tanggal2);
        }
        else{
            JOptionPane.showMessageDialog(null, "Mohon isikan periode", "ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cetakSlipGajiButtonActionPerformed

    private void tampilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tampilButtonActionPerformed
        if(jDateChooser1.getDate().toString().isEmpty() && jDateChooser2.getDate().toString().isEmpty() && pegawaiList.getSelectedItem().equals("[pilih]")){
            JOptionPane.showMessageDialog(null, "Mohon isikan periode", "ERROR",JOptionPane.ERROR_MESSAGE);
        }
        else{
            Date tanggal3 =(Date) jDateChooser1.getDate();
            tanggal1 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(tanggal3);
            tanggal3 =(Date) jDateChooser2.getDate();
            tanggal2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(tanggal3);
            
            if(pegawaiList.getSelectedItem().equals("Non Dokter")){
                refreshNonDokter(tanggal1, tanggal2);
            }
            else if (pegawaiList.getSelectedItem().equals("Dokter")){
                refreshDokter(tanggal1, tanggal2);
            }
        }
    }//GEN-LAST:event_tampilButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:

        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);
        pegawaiList.setSelectedItem("[pilih]");
        list = new ArrayList<>();
        tabel.setData(list);
        tabelPenggajian.setModel(tabel);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void jDateChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooser1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser1MouseClicked

    private void pegawaiListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegawaiListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pegawaiListActionPerformed

    public List<Penggajian> getPenggajianNonDokter(){
        return list;
    }
    
    public List<Penggajian> getPenggajianDokter(){
        return list2;
    }
    
    public void refreshNonDokter(String tanggal1, String tanggal2){
        try {
            list = new ArrayList<>();
            list = penggajianService.getPenggajianNonDokter(tanggal1, tanggal2);
            tabel.setData(list);
            tabelPenggajian.setModel(tabel);
        } catch (RemoteException ex) {
            Logger.getLogger(Panel_Penggajian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void refreshDokter(String tanggal1, String tanggal2){
        int gajiPeriksa;
        int gajiPokok;
        int totalGaji;
        String id_dokter = "";
        Penggajian penggajian = new Penggajian();
        
        try {
            list2 = new ArrayList<>();
            List<Penggajian> list1 = new ArrayList<>();
            list2 = penggajianService.getPenggajianDokter(tanggal1, tanggal2);
                for (int i=0; i<list2.size(); i++){
                    gajiPeriksa = list2.get(i).getGajiTambahan();
                    gajiPokok = list2.get(i).getGajiPokok();
                    String gajiTambah = ""+list2.get(i).getGajiTambahan();
                    if(gajiTambah.startsWith("NULL")){
                        gajiPeriksa = 0;
                    }
                    totalGaji = gajiPokok + gajiPeriksa;
                    list2.get(i).setGajiTambahan(gajiPeriksa);
                    list2.get(i).setTotalGaji(totalGaji);
                    
                    id_dokter = list2.get(i).getIdPegawai();
                    list1 = penggajianService.getGajiDokter(tanggal1, tanggal2, id_dokter);
                    
                    for (int j=0; j<list1.size(); j++){
                        String id_gaji = list1.get(j).getIdPenggajian();
                        String tanggal = list1.get(j).getTanggal();
                        list2.get(i).setTanggal(tanggal);
                        list2.get(i).setIdPenggajian(id_gaji);
                    }
                }
                tabel.setData(list2);
                tabelPenggajian.setModel(tabel);
        } catch (RemoteException ex) {
            Logger.getLogger(Panel_Penggajian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void refreshNonDokter1(String tanggal1, String tanggal2){
        int penggajianNonDokter = 0;
        List<Penggajian> list = new ArrayList<>();
        try {
            list = penggajianService.getPenggajianNonDokter(tanggal1, tanggal2);
            createPdf(list);
        } catch (RemoteException ex) {
            Logger.getLogger(Panel_Penggajian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void refreshDokter1(String tanggal1, String tanggal2){
        int gajiPeriksa;
        int gajiPokok;
        int totalGaji;
        String id_dokter = "";
        Penggajian penggajian = new Penggajian();
        
        List<Penggajian> list = new ArrayList<>();
        List<Penggajian> list1 = new ArrayList<>();
        try {
            list = penggajianService.getPenggajianDokter(tanggal1, tanggal2);
                for (int i=0; i<list.size(); i++){
                    gajiPeriksa = list.get(i).getGajiTambahan();
                    gajiPokok = list.get(i).getGajiPokok();
                    String gajiTambah = ""+list.get(i).getGajiTambahan();
                    if(gajiTambah.startsWith("NULL")){
                        gajiPeriksa = 0;
                    }
                    totalGaji = gajiPokok + gajiPeriksa;
                    list.get(i).setGajiTambahan(gajiPeriksa);
                    list.get(i).setTotalGaji(totalGaji);
                    
                    id_dokter = list.get(i).getIdPegawai();
                    list1 = penggajianService.getGajiDokter(tanggal1, tanggal2, id_dokter);
                    
                    for (int j=0; j<list1.size(); j++){
                        String id_gaji = list1.get(j).getIdPenggajian();
                        String tanggal = list1.get(j).getTanggal();
                        list.get(i).setTanggal(tanggal);
                        list.get(i).setIdPenggajian(id_gaji);
                    }
                }
                createPdf(list);
        } catch (RemoteException ex) {
            Logger.getLogger(Panel_Penggajian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void createPdf(List<Penggajian> list){
        JFileChooser saveFile = new JFileChooser();
        saveFile.setSelectedFile(new File("D:/document/Slip Gaji.pdf"));        
        String result = null;        
        if (saveFile.showSaveDialog(null)== JFileChooser.APPROVE_OPTION) {
              result= saveFile.getSelectedFile().toString();
        } else {
            System.out.println("No Selection ");
            }
        try {            
            Document document = new Document();
            try {
                PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(result));                
                document.open();
                PdfContentByte canvas = writer.getDirectContent();
                Rectangle rect = new Rectangle (50,800,550,700);
                rect.setBorder(Rectangle.BOX);
                rect.setBorderWidth(0);
                rect.setBorderColor(BaseColor.BLACK);
                canvas.rectangle(rect);
                Paragraph preface;
                preface = getPreface("Slip Gaji");                
                document.add(preface);
                document.add(Chunk.NEWLINE);
                document.add(Chunk.NEWLINE);
                document.add(createTableLaporan(list));
                document.close();
                open(result);                
            } catch (DocumentException ex) {
                Logger.getLogger(Panel_Laporan_Keuangan.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Panel_Laporan_Keuangan.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }
    
    private PdfPTable createTableLaporan(List<Penggajian> list){
        PdfPTable tabel = new PdfPTable(2);   
        PdfPCell cell;

        for(int i=0;i<list.size();i++){ 
            cell = new PdfPCell(new Phrase(("ID Pegawai"), font6));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setColspan(1);
            cell.setBorder(Rectangle.BOX);
            cell.setBorderWidth(1);
            tabel.addCell(cell); 
            
            cell = new PdfPCell(new Phrase((""+list.get(i).getIdPegawai()),font5));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setBorderWidth(1);
            tabel.addCell(cell);
            
            cell = new PdfPCell(new Phrase(("Nama Pegawai"), font6));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setColspan(1);
            cell.setBorder(Rectangle.BOX);
            cell.setBorderWidth(1);
            tabel.addCell(cell); 
        
            cell = new PdfPCell(new Phrase((""+list.get(i).getNamaPegawai()),font5));
            cell.setVerticalAlignment(Element.ALIGN_TOP); 
            cell.setBorderWidth(1);
            tabel.addCell(cell);
            
            cell = new PdfPCell(new Phrase(("Gaji Pokok"), font6));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setColspan(1);
            cell.setBorder(Rectangle.BOX);
            cell.setBorderWidth(1);
            tabel.addCell(cell); 
        
            cell = new PdfPCell(new Phrase((""+list.get(i).getGajiPokok()),font5));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setBorderWidth(1);
            tabel.addCell(cell);
            
            cell = new PdfPCell(new Phrase(("Gaji Tambahan"), font6));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setColspan(1);
            cell.setBorder(Rectangle.BOX);
            cell.setBorderWidth(1);
            tabel.addCell(cell); 
            
            cell = new PdfPCell(new Phrase((""+list.get(i).getGajiTambahan()),font5));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setBorderWidth(1);
            tabel.addCell(cell);
            
            cell = new PdfPCell(new Phrase(("Total Gaji"), font6));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setColspan(1);
            cell.setBorder(Rectangle.BOX);
            cell.setBorderWidth(1);
            tabel.addCell(cell); 
        
            cell = new PdfPCell(new Phrase((""+list.get(i).getTotalGaji()),font5));
            cell.setVerticalAlignment(Element.ALIGN_TOP);
            cell.setBorderWidth(1);
            tabel.addCell(cell);
        }
        return tabel;
    }
    
    private Paragraph getPreface(String status){
        Paragraph preface =new Paragraph();
        Calendar cal = new GregorianCalendar();
        String tanggal ="0";
        if(cal.get(Calendar.DATE)<0){
            tanggal="0"+cal.get(Calendar.DATE);
        }
        else{
            tanggal=""+cal.get(Calendar.DATE);
        }
        int bulan=(cal.get(Calendar.MONTH))+1;;                
        int tahun= cal.get(Calendar.YEAR);
        preface.setAlignment(Element.ALIGN_CENTER);     
        Chunk chunk = new Chunk("Slip Gaji",font1);
        preface.add(Chunk.NEWLINE);
        preface.add(chunk);
        chunk = new Chunk("SI Klinik",font2);
        preface.add(Chunk.NEWLINE);
        preface.add(chunk);
        chunk = new Chunk("Periode : "+tanggal1+" s/d "+tanggal2,font3);
        preface.add(Chunk.NEWLINE);
        preface.add(chunk);
        chunk = new Chunk("Diambil pada tanggal "+tanggal+"/"+bulan+"/"+tahun,font5);
        preface.add(Chunk.NEWLINE);
        preface.add(chunk);
        return preface;
    }
    
    private Paragraph getIsi(List<Penggajian>  list) throws RemoteException{
        Paragraph preface =new Paragraph();       
        preface.setAlignment(Element.ALIGN_LEFT);     
        Chunk chunk = new Chunk("Slip Gaji",font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Nama : "+penggajianService.getPenggajianSemuaPegawai(tanggal1, tanggal2).get(0).getnama_Pasien(),font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("alamat : "+ps.getPasien().get(0).getalamat().getjalan()+","+ps.getPasien().get(0).getalamat().getkota()+","+ps.getPasien().get(0).getalamat().getprovinsi(),font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Jenis kelamin : "+ps.getPasien().get(0).getjenis_kelamin(),font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Tanggal Lahir : "+ps.getPasien().get(0).gettanggal_Lahir(),font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Status Pernikahan : "+ps.getPasien().get(0).getstatus_pernikahan(),font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Pekerjaan : "+ps.getPasien().get(0).getpekerjaan(),font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Tanggal Daftar : "+ps.getPasien().get(0).gettanggal_daftar(),font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("=======================================================================",font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            
//            chunk = new Chunk("Hasil pemeriksaan:",font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            
//            chunk = new Chunk("",font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
        for(int i = 0; i<list.size();i++){           
            chunk = new Chunk("ID Pegawai : "+list.get(i).getIdPegawai(),font3);
            preface.add(Chunk.NEWLINE);
            preface.add(chunk);
         
            chunk = new Chunk("Nama Pegawai :"+list.get(i).getNamaPegawai(),font3);
            preface.add(Chunk.NEWLINE);
            preface.add(chunk);
            chunk = new Chunk("GAJI :",font3);
            preface.add(Chunk.NEWLINE);
            preface.add(chunk);  
            chunk = new Chunk("Gaji Pokok :"+list.get(i).getGajiPokok(),font3);
            preface.add(Chunk.NEWLINE);
            preface.add(chunk);
            chunk = new Chunk("Gaji Tambahan :"+list.get(i).getGajiTambahan(),font3);
            preface.add(Chunk.NEWLINE);
            preface.add(chunk);
            chunk = new Chunk("Gaji Total :"+list.get(i).getTotalGaji(),font3);
            preface.add(Chunk.NEWLINE);
            preface.add(chunk);
//            String keluhan = "" ;
//            ArrayList Keluhan = list.get(i).getdetail().getkeluhan();
//            for(int j = 0; j<Keluhan.size();j++){
//                if(j==0){
//                        keluhan=Keluhan.get(j).toString();
//                    }
//                    else{
//                   keluhan=keluhan+", "+Keluhan.get(j).toString();}
//            }
//                
//            chunk = new Chunk("Keluhan : "+keluhan,font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            
//            String diagnosa = "" ;
//            ArrayList Diagnosa = list.get(i).getdetail().getdiagnosa();
//            System.out.println(Diagnosa.size());
//            for(int j = 0; j<Diagnosa.size();j++){
//                if(j==0){
//                        diagnosa=Diagnosa.get(j).toString();
//                    }
//                    else{
//                   diagnosa=diagnosa+", "+Diagnosa.get(j).toString();}
//            }
//                
//            chunk = new Chunk("Diagnosa : "+diagnosa,font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            
//            String penyakit = "" ;
//            ArrayList Penyakit = list.get(i).getdetail().getpenyakit();
//            for(int j = 0; j<Penyakit.size();j++){
//                    if(j==0){
//                        try {
//                            penyakit=pen.getPenyakit(Penyakit.get(j).toString()).getNama_Penyakit();
//                        } catch (RemoteException ex) {
//                            Logger.getLogger(Form_RekamMedik_Tambah.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                    }
//                    else{
//                        try {
//                            penyakit=penyakit+", "+pen.getPenyakit(Penyakit.get(j).toString()).getNama_Penyakit();
//                        } catch (RemoteException ex) {
//                            Logger.getLogger(Form_RekamMedik_Tambah.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                    }
//            }
//             chunk = new Chunk("Penyakit : "+penyakit,font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("RESEP :",font3);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Nama Obat :"+ob.getObatFromID(list.get(i).getdetail().getResep().getid_Obat()).getNama_Obat(),font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Aturan Pemakaian : "+list.get(i).getdetail().getResep().getaturan_pemakaian(),font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Jumlah : "+list.get(i).getdetail().getResep().getjumlah(),font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("Satuan : "+list.get(i).getdetail().getResep().getsatuan(),font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("",font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
//            chunk = new Chunk("",font4);
//            preface.add(Chunk.NEWLINE);
//            preface.add(chunk);
        }
        
        return preface;
    }

     public void open(String url) {
        try {
            Desktop desktop = Desktop.getDesktop();
            if (desktop.isSupported(Desktop.Action.OPEN)) {
                desktop.open(new File(url));
            } else {
                System.out.println("Open is not supported");
            }
        } catch (IOException exp) {
            exp.printStackTrace();
        }
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cetakSlipGajiButton;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox pegawaiList;
    private javax.swing.JToggleButton refreshButton;
    private javax.swing.JTable tabelPenggajian;
    private javax.swing.JToggleButton tampilButton;
    // End of variables declaration//GEN-END:variables
}
